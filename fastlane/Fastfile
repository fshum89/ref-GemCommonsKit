#
#  Copyright (c) 2022 gematik GmbH
#  
#  Licensed under the Apache License, Version 2.0 (the License);
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  
#      http://www.apache.org/licenses/LICENSE-2.0
#  
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an 'AS IS' BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

xcversion(version: ENV["FL_XCODE_VERSION"] || "13.3.1")

schemes_testable_mac = ["GemCommonsKit_macOS"]
schemes_testable_ios = ["GemCommonsKit_iOS"]
schemes_build_only_mac = ["ObjCCommonsKit_macOS"]
schemes_build_only_ios = ["ObjCCommonsKit_iOS"]


desc "Build the project schemes for macOS"
lane :build_mac do
  schemes_testable_mac.each do |scheme|
    scan(
      scheme: scheme,
      build_for_testing: true
    )
  end
  schemes_build_only_mac.each do |scheme|
    scan(
      scheme: scheme,
      build_for_testing: true
    )
  end
end

desc "Build and test (scan) the project schemes for macOS"
desc "CI builds should run this lane on every commit"
desc ""
lane :test_mac do
  schemes_testable_mac.each do |scheme|
    scan(scheme: scheme)
  end
  schemes_build_only_mac.each do |scheme|
    scan(
      scheme: scheme,
      build_for_testing: true
    )
  end
end

desc "Build the project for iOS"
lane :build_ios do
  schemes_testable_ios.each do |scheme|
    scan(
      scheme: scheme,
      build_for_testing: true
    )
  end
  schemes_build_only_ios.each do |scheme|
    scan(
      scheme: scheme,
      build_for_testing: true
    )
  end
end

desc "Build and test (scan) the project for iOS"
desc "CI builds should run this lane on every commit"
lane :test_ios do
  schemes_testable_ios.each do |scheme|
    scan(scheme: scheme)
  end
  schemes_build_only_ios.each do |scheme|
    scan(
      scheme: scheme,
      build_for_testing: true
    )
  end
end

desc "Build the project for macOS and iOS by calling `build_mac` and `build_ios`"
lane :build_all do
  build_mac
  build_ios
end

desc "Build and test (scan) the project for macOS and iOS by calling `test_mac` and `test_ios`"
lane :test_all do
  test_mac
  test_ios
end

desc "Lane that (auto) genarates API documentation from inline comments."
lane :generate_documentation do
  jazzy(
    config: ".jazzy.yml"
  )
end

desc "Lane that runs the static code analyzer(s) for the project."
desc "CI builds should run this lane on every commit"
desc "Currently swiftlint is used as static analyzer"
desc ""
lane :static_code_analysis do
  swiftlint_mint="mint run swiftlint"
  swiftlint(
    executable: swiftlint_mint,
    config_file: ".swiftlint.yml",
    mode: :lint,
    ignore_exit_status: false,
    quiet: true,
    strict: true
  )
end

desc "Lane that sets up the SPM dependencies and xcodeproj."
desc ""
lane :setup do 
  sh("cd .. && mint run xcodegen generate --spec ./project.yml")
  sh("cd .. && xcodebuild -resolvePackageDependencies -scmProvider system -onlyUsePackageVersionsFromResolvedFile")
end

desc "Lane that the ci build should invoke directly to do a complete build/test/analysis."
desc "This lane calls `setup`, `static_code_analysis`, `test_all`, `generate_documentation`."
desc ""
lane :cibuild do
  setup
  static_code_analysis
  test_all
  generate_documentation
end
